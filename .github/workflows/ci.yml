name: Continuous integration

on:
    push:
        branches: [ main ]
    pull_request:
        branches: [ main ]
        types: [ opened, synchronize ]

jobs:
    check:
        name: Code check
        runs-on: ubuntu-latest
        permissions:
            contents: 'read'
            id-token: 'write'
        steps:
            -   name: Checkout
                uses: actions/checkout@v3

            -   name: Setup Node
                uses: actions/setup-node@v3
                with:
                    node-version-file: 'package.json'

            -   name: Install dependencies
                run: yarn install --immutable

            -   name: Lint
                run: yarn lint

            -   name: Type check
                run: yarn typecheck

    release:
        name: Release
        runs-on: ubuntu-latest
        if: ${{ github.event_name == 'push' }}
        needs: [ check ]
        permissions:
            contents: 'write'
            id-token: 'write'
            issues: 'write'
            pull-requests: 'write'
        steps:
            -   name: Checkout
                uses: actions/checkout@v3

            -   name: Setup Node
                uses: actions/setup-node@v3
                with:
                    node-version-file: 'package.json'

            -   name: Install dependencies
                run: yarn install
                env:
                    NPM_TOKEN: ${{ steps.auth.outputs.access_token }}

            -   name: Authorize Google Cloud SDK
                id: auth
                uses: google-github-actions/auth@v1
                with:
                    token_format: access_token
                    workload_identity_provider: ${{ secrets.MAGNUS_STRATEGY_WORKLOAD_IDENTITY_PROVIDER}}
                    service_account: ${{ secrets.MAGNUS_STRATEGY_SERVICE_ACCOUNT}}

            -   name: Configure Git User
                run: |
                    git config --global user.email "github-actions@magnus-strategy.com"
                    git config --global user.name "$GITHUB_ACTOR"

            -   name: Create Release Pull Request or Publish to npm
                uses: changesets/action@v1
                with:
                    publish: yarn publish
                    version: yarn version
                    commit: 'chore: release'
                    title: 'chore: release'
                    setupGitUser: false
                env:
                    NPM_TOKEN: ${{ steps.auth.outputs.access_token }}
                    YARN_ENABLE_IMMUTABLE_INSTALLS: false
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
